
/**
 * ASEvent is the superclass of all events generated by
 * the system.
 */
export class ASEvent { time = process.hrtime ? process.hrtime() : performance ? performance.now() : new Date(); }

/**
 * ChildSpawnedEvent 
 */
export class ChildSpawnedEvent extends ASEvent {

    constructor(public address: string) { super(); }

}

/**
 * MessageSentEvent 
 */
export class MessageSentEvent<M> extends ASEvent {

    constructor(public to: string, public from: string, public message: M) { super(); }

}

/**
 * MessageDroppedEvent 
 */
export class MessageDroppedEvent<M> extends MessageSentEvent<M>{ }

/**
 * MessageReceivedEvent 
 */
export class MessageReceivedEvent<M> extends MessageSentEvent<M>{ }

/**
 * ReceiveStartedEvent 
 */
export class ReceiveStartedEvent extends ASEvent {

    constructor(public path: string) { super(); }

}

/**
 * SelectStartedEvent 
 */
export class SelectStartedEvent extends ReceiveStartedEvent { }
